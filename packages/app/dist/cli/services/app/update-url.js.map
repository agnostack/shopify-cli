{"version":3,"file":"update-url.js","sourceRoot":"","sources":["../../../../src/cli/services/app/update-url.ts"],"names":[],"mappings":"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","sourcesContent":["import {selectApp} from './select-app.js'\nimport {getURLsData, updateURLsData, validatePartnerAppUpdate} from '../dev/urls.js'\nimport {conformAppUpdate, conformProxyURL, AppProxyUpdate, PartnersURLsData} from '../../api/graphql/app.js'\nimport {\n  allowedRedirectionURLsPrompt,\n  appProxySubPathPrompt,\n  appProxyURLPrompt,\n  appUrlPrompt,\n} from '../../prompts/update-url.js'\nimport {AppUpdate} from '../../api/graphql/update_app.js'\nimport {ensureAuthenticatedPartners} from '@shopify/cli-kit/node/session'\nimport {renderSuccess} from '@shopify/cli-kit/node/ui'\n\nexport interface UpdateURLOptions {\n  apiKey?: string\n  appURL?: string\n  redirectURLs?: string[]\n  appProxy?: AppProxyUpdate\n}\n\nexport default async function updateURLData(options: UpdateURLOptions): Promise<void> {\n  const token = await ensureAuthenticatedPartners()\n  const apiKey = options.apiKey || (await selectApp()).apiKey\n  const newURLsUpdate = await getNewURLsUpdate(token, apiKey, {\n    appURL: options.appURL,\n    redirectURLs: options.redirectURLs,\n    appProxy: options.appProxy,\n  })\n  console.log(`>>> > newURLsUpdate`, newURLsUpdate)\n  await updateURLsData(newURLsUpdate, apiKey, token)\n  printResult(newURLsUpdate)\n}\n\nasync function getNewURLsUpdate(token: string, apiKey: string, options: UpdateURLOptions): Promise<AppUpdate> {\n  console.log(`>>> > getNewURLsUpdate > options:`, options)\n  const currentURLsData: PartnersURLsData = await getURLsData(apiKey, token)\n  console.log(`>>> > getNewURLsUpdate > currentURLsData:`, currentURLsData)\n  const updatedURLsData: PartnersURLsData = {\n    applicationUrl: options.appURL || (await appUrlPrompt(currentURLsData?.applicationUrl)),\n    redirectUrlWhitelist:\n      options.redirectURLs || (await allowedRedirectionURLsPrompt(currentURLsData?.redirectUrlWhitelist?.join(','))),\n    appProxy: options.appProxy ?? {\n      url: await appProxyURLPrompt(currentURLsData?.appProxy?.url ?? currentURLsData?.applicationUrl),\n      subPath: await appProxySubPathPrompt(currentURLsData?.appProxy?.subPath),\n      // NOTE: AppUpdateInput mutation currently does not support setting subPathPrefix\n      // subPathPrefix: await appProxySubPathPrefixPrompt(currentURLsData?.appProxy?.subPathPrefix ?? 'apps'),\n    },\n  }\n\n  console.log(`>>>> > getNewURLsUpdate > conformAppUpdate/updatedURLsData:`, {conformAppUpdate, updatedURLsData})\n  const appUpdate: AppUpdate = conformAppUpdate(updatedURLsData)\n  console.log(`>>>> > getNewURLsUpdate > appUpdate:`, appUpdate)\n\n  validatePartnerAppUpdate(appUpdate)\n  return appUpdate\n}\n\nfunction printResult(data: PartnersURLsData): void {\n  console.log(`>>> > printResult > data:`, data)\n  const customSections = [\n    {title: 'App URL', body: {list: {items: [data.applicationUrl]}}},\n    {title: 'Allowed redirection URL(s)', body: {list: {items: data.redirectUrlWhitelist}}},\n  ]\n\n  if (data.appProxy) {\n    customSections.push({title: 'App Proxy URL', body: {list: {items: [conformProxyURL(data.appProxy)]}}})\n  }\n\n  renderSuccess({\n    headline: 'App URLs updated.',\n    customSections,\n  })\n}\n"]}