{"version":3,"file":"headers.test.js","sourceRoot":"","sources":["../../../../src/private/node/api/headers.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {buildHeaders, sanitizedHeadersOutput} from './headers.js'\nimport {CLI_KIT_VERSION} from '../../../public/common/version.js'\nimport {randomUUID} from '../../../public/node/crypto.js'\nimport {firstPartyDev, isUnitTest} from '../../../public/node/context/local.js'\nimport {test, vi, expect, describe, beforeEach} from 'vitest'\n\nvi.mock('../../../public/node/crypto.js')\nvi.mock('../../../public/node/context/local.js')\nvi.mock('../version')\n\nbeforeEach(() => {\n  vi.mocked(isUnitTest).mockReturnValue(true)\n})\n\ndescribe('common API methods', () => {\n  test('headers are built correctly when firstPartyDev yields true', () => {\n    // Given\n    vi.mocked(randomUUID).mockReturnValue('random-uuid')\n    vi.mocked(firstPartyDev).mockReturnValue(true)\n    // When\n    const headers = buildHeaders('my-token')\n\n    // Then\n    const version = CLI_KIT_VERSION\n    expect(headers).toEqual({\n      'Content-Type': 'application/json',\n      'Keep-Alive': 'timeout=30',\n      'X-Shopify-Access-Token': 'Bearer my-token',\n      'User-Agent': `Shopify CLI; v=${version}`,\n      authorization: 'Bearer my-token',\n      'Sec-CH-UA-PLATFORM': process.platform,\n      'X-Shopify-Cli-Employee': '1',\n    })\n  })\n\n  test('when user is not employee, do not include header', () => {\n    // Given\n    vi.mocked(randomUUID).mockReturnValue('random-uuid')\n    vi.mocked(firstPartyDev).mockReturnValue(false)\n    // When\n    const headers = buildHeaders('my-token')\n\n    // Then\n    const version = CLI_KIT_VERSION\n    expect(headers).toEqual({\n      'Content-Type': 'application/json',\n      'Keep-Alive': 'timeout=30',\n      'X-Shopify-Access-Token': 'Bearer my-token',\n      'User-Agent': `Shopify CLI; v=${version}`,\n      authorization: 'Bearer my-token',\n      'Sec-CH-UA-PLATFORM': process.platform,\n    })\n  })\n\n  test('when using a custom app token, omit Bearer from auth headers', () => {\n    // Given\n    vi.mocked(randomUUID).mockReturnValue('random-uuid')\n    vi.mocked(firstPartyDev).mockReturnValue(false)\n    const token = 'shpat_my_token'\n    // When\n    const headers = buildHeaders(token)\n\n    // Then\n    const version = CLI_KIT_VERSION\n    expect(headers).toEqual({\n      'Content-Type': 'application/json',\n      'Keep-Alive': 'timeout=30',\n      'X-Shopify-Access-Token': token,\n      'User-Agent': `Shopify CLI; v=${version}`,\n      authorization: token,\n      'Sec-CH-UA-PLATFORM': process.platform,\n    })\n  })\n\n  test('sanitizedHeadersOutput removes the headers that include the token', () => {\n    // Given\n    const headers = {\n      'User-Agent': 'useragent',\n      'Keep-Alive': 'timeout=30',\n      Authorization: 'token',\n      authorization: 'token',\n      'Content-Type': 'application/json',\n      'X-Shopify-Access-Token': 'token',\n    }\n\n    // When\n    const got = sanitizedHeadersOutput(headers)\n\n    // Then\n    expect(got).toMatchInlineSnapshot(`\n      \" - User-Agent: useragent\n       - Keep-Alive: timeout=30\n       - Content-Type: application/json\"\n    `)\n  })\n})\n"]}