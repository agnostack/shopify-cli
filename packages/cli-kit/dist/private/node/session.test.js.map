{"version":3,"file":"session.test.js","sourceRoot":"","sources":["../../../src/private/node/session.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {ensureAuthenticated, OAuthApplications, OAuthSession} from './session.js'\nimport {\n  exchangeAccessForApplicationTokens,\n  exchangeCodeForAccessToken,\n  exchangeCustomPartnerToken,\n  refreshAccessToken,\n  InvalidGrantError,\n} from './session/exchange.js'\nimport {authorize} from './session/authorize.js'\nimport {allDefaultScopes} from './session/scopes.js'\nimport {store as secureStore, fetch as secureFetch} from './session/store.js'\n\nimport {ApplicationToken, IdentityToken, Session} from './session/schema.js'\nimport {validateSession} from './session/validate.js'\nimport {applicationId} from './session/identity.js'\nimport * as fqdnModule from '../../public/node/context/fqdn.js'\nimport {useDeviceAuth} from '../../public/node/context/local.js'\nimport {partnersRequest} from '../../public/node/api/partners.js'\nimport {getPartnersToken} from '../../public/node/environment.js'\nimport {vi, describe, expect, test, beforeEach} from 'vitest'\n\nconst futureDate = new Date(2022, 1, 1, 11)\n\nconst code = {code: 'code', codeVerifier: 'verifier'}\n\nconst defaultApplications: OAuthApplications = {\n  adminApi: {storeFqdn: 'mystore', scopes: []},\n  partnersApi: {scopes: []},\n  storefrontRendererApi: {scopes: []},\n}\n\nconst validIdentityToken: IdentityToken = {\n  accessToken: 'access_token',\n  refreshToken: 'refresh_token',\n  expiresAt: futureDate,\n  scopes: ['scope', 'scope2'],\n}\n\nconst validTokens: OAuthSession = {\n  admin: {token: 'admin_token', storeFqdn: 'mystore.myshopify.com'},\n  storefront: 'storefront_token',\n  partners: 'partners_token',\n}\n\nconst appTokens: {[x: string]: ApplicationToken} = {\n  // Admin APIs includes domain in the key\n  'mystore.myshopify.com-admin': {\n    accessToken: 'admin_token',\n    expiresAt: futureDate,\n    scopes: ['scope', 'scope2'],\n  },\n  'storefront-renderer': {\n    accessToken: 'storefront_token',\n    expiresAt: futureDate,\n    scopes: ['scope1'],\n  },\n  partners: {\n    accessToken: 'partners_token',\n    expiresAt: futureDate,\n    scopes: ['scope2'],\n  },\n}\n\nconst partnersToken: ApplicationToken = {\n  accessToken: 'custom_partners_token',\n  expiresAt: futureDate,\n  scopes: ['scope2'],\n}\n\nconst fqdn = 'fqdn.com'\n\nconst validSession: Session = {\n  [fqdn]: {\n    identity: validIdentityToken,\n    applications: appTokens,\n  },\n}\n\nconst invalidSession: Session = {\n  randomFQDN: {\n    identity: validIdentityToken,\n    applications: {},\n  },\n}\n\nvi.mock('../../public/node/context/local.js')\nvi.mock('./session/identity')\nvi.mock('./session/authorize')\nvi.mock('./session/exchange')\nvi.mock('./session/scopes')\nvi.mock('./session/store')\nvi.mock('./session/validate')\nvi.mock('../../public/node/api/partners.js')\nvi.mock('../../store')\nvi.mock('../../public/node/environment.js')\n\nbeforeEach(() => {\n  vi.spyOn(fqdnModule, 'identityFqdn').mockResolvedValue(fqdn)\n  vi.mocked(useDeviceAuth).mockReturnValue(false)\n  vi.mocked(authorize).mockResolvedValue(code)\n  vi.mocked(exchangeCodeForAccessToken).mockResolvedValue(validIdentityToken)\n  vi.mocked(exchangeAccessForApplicationTokens).mockResolvedValue(appTokens)\n  vi.mocked(refreshAccessToken).mockResolvedValue(validIdentityToken)\n  vi.mocked(applicationId).mockImplementation((app) => app)\n  vi.mocked(exchangeCustomPartnerToken).mockResolvedValue(partnersToken)\n  vi.mocked(partnersRequest).mockResolvedValue(undefined)\n  vi.mocked(allDefaultScopes).mockImplementation((scopes) => scopes || [])\n})\n\ndescribe('ensureAuthenticated when previous session is invalid', () => {\n  test('executes complete auth flow if there is no session', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('needs_full_auth')\n    vi.mocked(secureFetch).mockResolvedValue(undefined)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(refreshAccessToken).not.toBeCalled()\n    expect(secureStore).toBeCalledWith(validSession)\n    expect(got).toEqual(validTokens)\n  })\n\n  test('executes complete auth flow if session is for a different fqdn', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('needs_full_auth')\n    vi.mocked(secureFetch).mockResolvedValue(invalidSession)\n    const newSession: Session = {...invalidSession, ...validSession}\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(refreshAccessToken).not.toBeCalled()\n    expect(secureStore).toBeCalledWith(newSession)\n    expect(got).toEqual(validTokens)\n  })\n\n  test('executes complete auth flow if requesting additional scopes', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('needs_full_auth')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(refreshAccessToken).not.toBeCalled()\n    expect(secureStore).toBeCalledWith(validSession)\n    expect(got).toEqual(validTokens)\n  })\n})\n\ndescribe('when existing session is valid', () => {\n  test('does nothing', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('ok')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).not.toHaveBeenCalled()\n    expect(exchangeCodeForAccessToken).not.toBeCalled()\n    expect(exchangeAccessForApplicationTokens).not.toBeCalled()\n    expect(refreshAccessToken).not.toBeCalled()\n    expect(got).toEqual(validTokens)\n  })\n\n  test('overwrites partners token if provided with a custom CLI token', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('ok')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n    vi.mocked(getPartnersToken).mockReturnValue('custom_cli_token')\n    const expected = {...validTokens, partners: 'custom_partners_token'}\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).not.toHaveBeenCalled()\n    expect(exchangeCodeForAccessToken).not.toBeCalled()\n    expect(exchangeAccessForApplicationTokens).not.toBeCalled()\n    expect(refreshAccessToken).not.toBeCalled()\n    expect(got).toEqual(expected)\n  })\n\n  test('refreshes token if forceRefresh is true', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('ok')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications, process.env, true)\n\n    // Then\n    expect(authorize).not.toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).not.toBeCalled()\n    expect(refreshAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(secureStore).toBeCalledWith(validSession)\n    expect(got).toEqual(validTokens)\n  })\n})\n\ndescribe('when existing session is expired', () => {\n  test('refreshes the tokens', async () => {\n    // Given\n    vi.mocked(validateSession).mockResolvedValueOnce('needs_refresh')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).not.toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).not.toBeCalled()\n    expect(refreshAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(secureStore).toBeCalledWith(validSession)\n    expect(got).toEqual(validTokens)\n  })\n\n  test('attempts to refresh the token and executes a complete flow if identity returns an invalid grant error', async () => {\n    // Given\n    const tokenResponseError = new InvalidGrantError()\n\n    vi.mocked(validateSession).mockResolvedValueOnce('needs_refresh')\n    vi.mocked(secureFetch).mockResolvedValue(validSession)\n    vi.mocked(refreshAccessToken).mockRejectedValueOnce(tokenResponseError)\n\n    // When\n    const got = await ensureAuthenticated(defaultApplications)\n\n    // Then\n    expect(authorize).toHaveBeenCalledOnce()\n    expect(exchangeCodeForAccessToken).toBeCalled()\n    expect(refreshAccessToken).toBeCalled()\n    expect(exchangeAccessForApplicationTokens).toBeCalled()\n    expect(secureStore).toBeCalledWith(validSession)\n    expect(got).toEqual(validTokens)\n  })\n})\n"]}