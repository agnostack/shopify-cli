{"version":3,"file":"validate.test.js","sourceRoot":"","sources":["../../../../src/private/node/session/validate.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {validateSession} from './validate.js'\nimport {validateIdentityToken} from './identity-token-validation.js'\nimport {applicationId} from './identity.js'\nimport {IdentityToken} from './schema.js'\nimport {OAuthApplications} from '../session.js'\nimport {expect, describe, test, vi, afterAll, beforeEach} from 'vitest'\n\nconst pastDate = new Date(2022, 1, 1, 9)\nconst currentDate = new Date(2022, 1, 1, 10)\nconst futureDate = new Date(2022, 1, 1, 11)\nconst storeName = 'store.myshopify.io'\nconst requestedScopes = ['scope', 'scope2']\n\nconst validIdentity: IdentityToken = {\n  accessToken: 'access_token',\n  refreshToken: 'refresh',\n  expiresAt: futureDate,\n  scopes: ['scope', 'scope2', 'scope3'],\n}\n\nconst expiredIdentity: IdentityToken = {\n  accessToken: 'access_token',\n  refreshToken: 'refresh',\n  expiresAt: pastDate,\n  scopes: ['scope', 'scope2', 'scope3'],\n}\n\nconst validApplications = {\n  partners: {\n    accessToken: 'access_token',\n    expiresAt: futureDate,\n    scopes: ['scope'],\n  },\n  'storefront-renderer': {\n    accessToken: 'access_token',\n    expiresAt: futureDate,\n    scopes: ['scope'],\n  },\n  [`${storeName}-admin`]: {\n    accessToken: 'access_token',\n    expiresAt: futureDate,\n    scopes: ['scope'],\n  },\n}\n\nconst expiredApplications = {\n  partners: {\n    accessToken: 'access_token',\n    expiresAt: pastDate,\n    scopes: ['scope'],\n  },\n  'storefront-renderer': {\n    accessToken: 'access_token',\n    expiresAt: pastDate,\n    scopes: ['scope'],\n  },\n  [`${storeName}-admin`]: {\n    accessToken: 'access_token',\n    expiresAt: pastDate,\n    scopes: ['scope'],\n  },\n}\n\nconst defaultApps: OAuthApplications = {\n  partnersApi: {scopes: []},\n  adminApi: {scopes: [], storeFqdn: storeName},\n  storefrontRendererApi: {scopes: []},\n}\n\nvi.mock('./identity-token-validation')\nvi.mock('./identity')\n\nbeforeEach(() => {\n  vi.mocked(applicationId).mockImplementation((id: any) => id)\n  vi.setSystemTime(currentDate)\n  vi.mocked(validateIdentityToken).mockResolvedValue(true)\n})\n\nafterAll(() => {\n  // Restore Date mock\n  vi.useRealTimers()\n})\n\ndescribe('validateSession', () => {\n  test('returns ok if session is valid', async () => {\n    // Given\n    const session = {\n      identity: validIdentity,\n      applications: validApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, defaultApps, session)\n\n    // Then\n    expect(got).toBe('ok')\n  })\n\n  test('returns needs_full_auth if there is no session', async () => {\n    // Given\n    const session: any = undefined\n\n    // When\n    const got = await validateSession(requestedScopes, defaultApps, session)\n\n    // Then\n    expect(got).toBe('needs_full_auth')\n  })\n\n  test('returns needs_full_auth if identity token is invalid', async () => {\n    // Given\n    const session = {\n      identity: validIdentity,\n      applications: validApplications,\n    }\n    vi.mocked(validateIdentityToken).mockResolvedValueOnce(false)\n\n    // When\n    const got = await validateSession(requestedScopes, defaultApps, session)\n\n    // Then\n    expect(got).toBe('needs_full_auth')\n  })\n\n  test('returns needs_full_auth if there is requested scopes are not included in token', async () => {\n    // Given\n    const session = {\n      identity: validIdentity,\n      applications: validApplications,\n    }\n\n    // When\n    const got = await validateSession(['random_scope'], defaultApps, session)\n\n    // Then\n    expect(got).toBe('needs_full_auth')\n  })\n\n  test('returns needs_refresh if identity is expired', async () => {\n    // Given\n    const session = {\n      identity: expiredIdentity,\n      applications: validApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, defaultApps, session)\n\n    // Then\n    expect(got).toBe('needs_refresh')\n  })\n\n  test('returns needs_refresh if requesting partners and is expired', async () => {\n    // Given\n    const applications = {\n      partnersApi: {scopes: []},\n    }\n    const session = {\n      identity: validIdentity,\n      applications: expiredApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, applications, session)\n\n    // Then\n    expect(got).toBe('needs_refresh')\n  })\n\n  test('returns needs_refresh if requesting storefront and is expired', async () => {\n    // Given\n    const applications = {\n      storefrontRendererApi: {scopes: []},\n    }\n    const session = {\n      identity: validIdentity,\n      applications: expiredApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, applications, session)\n\n    // Then\n    expect(got).toBe('needs_refresh')\n  })\n\n  test('returns needs_refresh if requesting admin and is expired', async () => {\n    // Given\n    const applications: OAuthApplications = {\n      adminApi: {scopes: [], storeFqdn: storeName},\n    }\n    const session = {\n      identity: validIdentity,\n      applications: expiredApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, applications, session)\n\n    // Then\n    expect(got).toBe('needs_refresh')\n  })\n\n  test('returns needs_refresh if session does not include requested store', async () => {\n    // Given\n    const applications: OAuthApplications = {\n      adminApi: {scopes: [], storeFqdn: 'NotMyStore'},\n    }\n    const session = {\n      identity: validIdentity,\n      applications: validApplications,\n    }\n\n    // When\n    const got = await validateSession(requestedScopes, applications, session)\n\n    // Then\n    expect(got).toBe('needs_refresh')\n  })\n})\n"]}