{"version":3,"file":"generate-theme-name.test.js","sourceRoot":"","sources":["../../../../src/private/node/themes/generate-theme-name.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,cAAc,EAAE,iBAAiB,EAAC,MAAM,0BAA0B,CAAA;AAC1E,OAAO,EAAC,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE,EAAC,MAAM,QAAQ,CAAA;AAC7D,OAAO,EAAC,QAAQ,EAAC,MAAM,IAAI,CAAA;AAC3B,OAAO,EAAC,WAAW,EAAC,MAAM,QAAQ,CAAA;AAElC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACb,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AAEjB,QAAQ,CAAC,mBAAmB,EAAE,GAAG,EAAE;IACjC,MAAM,OAAO,GAAG,aAAa,CAAA;IAE7B,UAAU,CAAC,GAAG,EAAE;QACd,EAAE,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,kBAAkB,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;IACzE,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,8DAA8D,EAAE,GAAG,EAAE;QACxE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,wBAAwB,CAAC,CAAA;QAC7D,MAAM,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAA;IACjF,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,0DAA0D,EAAE,GAAG,EAAE;QACpE,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,qDAAqD,CAAC,CAAA;QAC1F,MAAM,SAAS,GAAG,iBAAiB,CAAC,OAAO,CAAC,CAAA;QAC5C,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;QAC7C,MAAM,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAA;IACjF,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {API_NAME_LIMIT, generateThemeName} from './generate-theme-name.js'\nimport {beforeEach, describe, expect, test, vi} from 'vitest'\nimport {hostname} from 'os'\nimport {randomBytes} from 'crypto'\n\nvi.mock('os')\nvi.mock('crypto')\n\ndescribe('generateThemeName', () => {\n  const context = 'Development'\n\n  beforeEach(() => {\n    vi.mocked(randomBytes).mockImplementation(() => Buffer.from([1, 2, 3]))\n  })\n\n  test('should not truncate if the theme name is below the API limit', () => {\n    vi.mocked(hostname).mockReturnValue('Mac-Book-Pro.My-Router')\n    expect(generateThemeName(context)).toEqual('Development (010203-Mac-Book-Pro)')\n  })\n\n  test('should truncate if the theme name is above the API limit', () => {\n    vi.mocked(hostname).mockReturnValue('theme-dev-lan-very-long-name-that-will-be-truncated')\n    const themeName = generateThemeName(context)\n    expect(themeName.length).toBe(API_NAME_LIMIT)\n    expect(themeName).toEqual('Development (010203-theme-dev-lan-very-long-name-)')\n  })\n})\n"]}