{"version":3,"file":"headers.test.js","sourceRoot":"","sources":["../../../../../src/private/node/themes/themes-api/headers.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {apiCallLimit, retryAfter} from './headers.js'\nimport {test, expect, describe, beforeEach} from 'vitest'\nimport {RestResponse} from '@shopify/cli-kit/node/api/admin'\n\nlet response: RestResponse\n\nbeforeEach(() => {\n  response = {\n    json: {},\n    status: 200,\n    headers: {},\n  }\n})\n\ndescribe('retryAfter', () => {\n  test('when the \"retry-after\" header value is valid', async () => {\n    // Given\n    response.headers = {\n      'retry-after': ['2.0'],\n    }\n\n    // When\n    const retryAfterDelay = retryAfter(response)\n\n    // Then\n    expect(retryAfterDelay).toBe(2)\n  })\n\n  test('when the \"retry-after\" header value is not present', async () => {\n    // Given\n    response.headers = {\n      'retry-after': [],\n    }\n\n    // When\n    const retryAfterDelay = retryAfter(response)\n\n    // Then\n    expect(retryAfterDelay).toBe(0)\n  })\n\n  test('when the \"retry-after\" header value is valid', async () => {\n    // Given\n    response.headers = {\n      'retry-after': ['invalid'],\n    }\n\n    // When\n    const retryAfterDelay = retryAfter(response)\n\n    // Then\n    expect(retryAfterDelay).toBe(0)\n  })\n\n  test('when the \"retry-after\" header is not present', async () => {\n    // Given\n    response.headers = {}\n\n    // When\n    const retryAfterDelay = retryAfter(response)\n\n    // Then\n    expect(retryAfterDelay).toBe(0)\n  })\n})\n\ndescribe('apiCallLimit', () => {\n  test('when the \"x-shopify-shop-api-call-limit\" header is valid', async () => {\n    // Given\n    response.headers = {\n      'x-shopify-shop-api-call-limit': ['10/40'],\n    }\n\n    // When\n    const callLimit = apiCallLimit(response)\n    const [used, limit] = callLimit!\n\n    // Then\n    expect(used).toBe(10)\n    expect(limit).toBe(40)\n  })\n\n  test('when the \"x-shopify-shop-api-call-limit\" header is invalid', async () => {\n    // Given\n    response.headers = {\n      'x-shopify-shop-api-call-limit': ['foo/bar'],\n    }\n\n    // When\n    const callLimit = apiCallLimit(response)\n\n    // Then\n    expect(callLimit).toBeUndefined()\n  })\n\n  test('when the \"x-shopify-shop-api-call-limit\" header is not formatted as expected', async () => {\n    // Given\n    response.headers = {\n      'x-shopify-shop-api-call-limit': ['/10'],\n    }\n\n    // When\n    const callLimit = apiCallLimit(response)\n\n    // Then\n    expect(callLimit).toBeUndefined()\n  })\n})\n"]}