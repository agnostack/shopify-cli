{"version":3,"file":"use-layout.test.js","sourceRoot":"","sources":["../../../../../src/private/node/ui/hooks/use-layout.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {calculateLayout} from './use-layout.js'\nimport {Stdout} from '../../ui.js'\nimport {describe, expect, test, vi} from 'vitest'\n\nvi.mock('ink')\n\ndescribe('useLayout-calculateLayout', async () => {\n  describe('fullWidth', async () => {\n    test('it returns 20 if the stdout width is less than 20', async () => {\n      const {fullWidth} = calculateLayout(new Stdout({columns: 10}) as any)\n      expect(fullWidth).toBe(20)\n    })\n\n    test('it returns the stdout width if that is more than 20', async () => {\n      const {fullWidth} = calculateLayout(new Stdout({columns: 200}) as any)\n      expect(fullWidth).toBe(200)\n    })\n  })\n\n  describe('twoThirds', async () => {\n    test('it returns 2/3rds of the width if that is more than the min width of 80', async () => {\n      const {twoThirds} = calculateLayout(new Stdout({columns: 200}) as any)\n      expect(twoThirds).toBe(133)\n    })\n\n    test('it returns the stdout width if that is less than the min width', async () => {\n      const {twoThirds} = calculateLayout(new Stdout({columns: 70}) as any)\n      expect(twoThirds).toBe(70)\n    })\n\n    test('it returns the min width if 2/3rds of the width are less than the min width', async () => {\n      const {twoThirds} = calculateLayout(new Stdout({columns: 100}) as any)\n      expect(twoThirds).toBe(80)\n    })\n\n    test('it returns 20 if the stdout width is less than 20', async () => {\n      const {twoThirds} = calculateLayout(new Stdout({columns: 10}) as any)\n      expect(twoThirds).toBe(20)\n    })\n  })\n\n  describe('oneThird', async () => {\n    test('it returns the stdout width if that is less than the min width', async () => {\n      const {oneThird} = calculateLayout(new Stdout({columns: 70}) as any)\n      expect(oneThird).toBe(70)\n    })\n\n    test('it returns the min width if 1/3rd of the width are less than the min width', async () => {\n      const {oneThird} = calculateLayout(new Stdout({columns: 120}) as any)\n      expect(oneThird).toBe(80)\n    })\n\n    test('it returns 1/3rd of the width if that is more than the min width of 80', async () => {\n      const {oneThird} = calculateLayout(new Stdout({columns: 300}) as any)\n      expect(oneThird).toBe(100)\n    })\n\n    test('it returns 20 if the stdout width is less than 20', async () => {\n      const {oneThird} = calculateLayout(new Stdout({columns: 10}) as any)\n      expect(oneThird).toBe(20)\n    })\n  })\n})\n"]}