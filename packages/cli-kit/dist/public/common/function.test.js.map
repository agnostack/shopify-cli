{"version":3,"file":"function.test.js","sourceRoot":"","sources":["../../../src/public/common/function.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAE,OAAO,EAAC,MAAM,eAAe,CAAA;AAC/C,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAC,MAAM,QAAQ,CAAA;AAE7C,QAAQ,CAAC,SAAS,EAAE,GAAG,EAAE;IACvB,IAAI,CAAC,6BAA6B,EAAE,GAAG,EAAE;QACvC,QAAQ;QACR,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,SAAS,iBAAiB;YACxB,KAAK,IAAI,CAAC,CAAA;YACV,OAAO,KAAK,CAAA;QACd,CAAC;QACD,MAAM,gBAAgB,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAA;QAEnD,YAAY;QACZ,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;QACrC,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IACvC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA;AAEF,QAAQ,CAAC,UAAU,EAAE,GAAG,EAAE;IACxB,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;QACxC,QAAQ;QACR,IAAI,KAAK,GAAG,CAAC,CAAA;QACb,MAAM,IAAI,OAAO,CAAO,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC1C,MAAM,SAAS,GAAG,QAAQ,CAAC,GAAG,EAAE;gBAC9B,KAAK,IAAI,CAAC,CAAA;gBACV,OAAO,EAAE,CAAA;YACX,CAAC,EAAE,GAAG,CAAC,CAAA;YACP,SAAS,EAAE,CAAA;YACX,SAAS,EAAE,CAAA;YACX,SAAS,EAAE,CAAA;QACb,CAAC,CAAC,CAAA;QAEF,OAAO;QACP,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;IAC1B,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {debounce, memoize} from './function.js'\nimport {describe, test, expect} from 'vitest'\n\ndescribe('memoize', () => {\n  test('memoizes the function value', () => {\n    // Given\n    let value = 0\n    function functionToMemoize() {\n      value += 1\n      return value\n    }\n    const memoizedFunction = memoize(functionToMemoize)\n\n    // When/Then\n    expect(memoizedFunction()).toEqual(1)\n    expect(memoizedFunction()).toEqual(1)\n  })\n})\n\ndescribe('debounce', () => {\n  test('debounces the function', async () => {\n    // Given\n    let value = 0\n    await new Promise<void>((resolve, reject) => {\n      const debounced = debounce(() => {\n        value += 1\n        resolve()\n      }, 200)\n      debounced()\n      debounced()\n      debounced()\n    })\n\n    // Then\n    expect(value).toEqual(1)\n  })\n})\n"]}