{"version":3,"file":"url.test.js","sourceRoot":"","sources":["../../../src/public/common/url.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,UAAU,CAAA;AACnC,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAA;AAE7C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,IAAI,CAAC,kCAAkC,EAAE,GAAG,EAAE;QAC5C,aAAa;QACb,MAAM,GAAG,GAAG,UAAU,CAAC,qBAAqB,CAAC,CAAA;QAE7C,OAAO;QACP,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;IACxB,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,mCAAmC,EAAE,GAAG,EAAE;QAC7C,aAAa;QACb,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE,CAAC,CAAA;QAE1B,OAAO;QACP,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACzB,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,wCAAwC,EAAE,GAAG,EAAE;QAClD,aAAa;QACb,MAAM,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,CAAA;QAE/B,OAAO;QACP,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACzB,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,kDAAkD,EAAE,GAAG,EAAE;QAC5D,aAAa;QACb,MAAM,GAAG,GAAG,UAAU,CAAC,aAAa,CAAC,CAAA;QAErC,OAAO;QACP,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA;IACzB,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {isValidURL} from './url.js'\nimport {describe, expect, test} from 'vitest'\n\ndescribe('isValidURL', () => {\n  test('returns true if the URL is valid', () => {\n    // Given/When\n    const got = isValidURL('https://example.com')\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns false if the URL is empty', () => {\n    // Given/When\n    const got = isValidURL('')\n\n    // Then\n    expect(got).toBe(false)\n  })\n\n  test('returns false if the format is invalid', () => {\n    // Given/When\n    const got = isValidURL('wrong')\n\n    // Then\n    expect(got).toBe(false)\n  })\n\n  test('returns false if the URL is missing the protocol', () => {\n    // Given/When\n    const got = isValidURL('example.com')\n\n    // Then\n    expect(got).toBe(false)\n  })\n})\n"]}