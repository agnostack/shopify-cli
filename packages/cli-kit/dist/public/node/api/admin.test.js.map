{"version":3,"file":"admin.test.js","sourceRoot":"","sources":["../../../../src/public/node/api/admin.test.ts"],"names":[],"mappings":"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","sourcesContent":["import * as admin from './admin.js'\nimport {graphqlRequest} from './graphql.js'\nimport {AdminSession} from '../session.js'\nimport {buildHeaders} from '../../../private/node/api/headers.js'\nimport * as http from '../../../public/node/http.js'\nimport {test, vi, expect, describe} from 'vitest'\n\nvi.mock('./graphql.js')\nvi.mock('../../../private/node/api/headers.js')\nvi.mock('../http.js')\n\nconst mockedResult = {\n  publicApiVersions: [\n    {\n      handle: '2021-01',\n      supported: false,\n    },\n    {\n      handle: '2022-01',\n      supported: true,\n    },\n    {\n      handle: '2019-01',\n      supported: true,\n    },\n  ],\n}\n\nconst token = 'token'\nconst Session: AdminSession = {token, storeFqdn: 'store'}\n\ndescribe('admin-graphql-api', () => {\n  test('calls the graphql client twice: get api version and then execute the request', async () => {\n    // Given\n    vi.mocked(graphqlRequest).mockResolvedValue(mockedResult)\n\n    // When\n    await admin.adminRequest('query', Session, {})\n\n    // Then\n    expect(graphqlRequest).toHaveBeenCalledTimes(2)\n  })\n\n  test('request is called with correct parameters', async () => {\n    // Given\n    vi.mocked(graphqlRequest).mockResolvedValue(mockedResult)\n\n    // When\n    await admin.adminRequest('query', Session, {variables: 'variables'})\n\n    // Then\n    expect(graphqlRequest).toHaveBeenLastCalledWith({\n      query: 'query',\n      api: 'Admin',\n      url: 'https://store/admin/api/2022-01/graphql.json',\n      token,\n      variables: {variables: 'variables'},\n    })\n  })\n})\n\ndescribe('admin-rest-api', () => {\n  test('\"#restRequest\" returns a valid response', async () => {\n    // Given\n    const json = () => Promise.resolve({result: true})\n    const status = 200\n    const headers = {'some-header': 123}\n\n    vi.spyOn(http, 'fetch').mockResolvedValue({\n      json,\n      status,\n      headers: {raw: () => headers},\n    } as any)\n\n    // When\n    const result = await admin.restRequest('GET', '/themes', Session)\n\n    // Then\n    expect(result.json).toEqual({result: true})\n    expect(result.status).toEqual(200)\n    expect(result.headers).toEqual({'some-header': 123})\n  })\n\n  test('fetch is called with correct parameters', async () => {\n    // Given\n    const json = () => Promise.resolve({result: true})\n    const status = 200\n    const headers = {'X-Shopify-Access-Token': `Bearer ${token}`, 'Content-Type': 'application/json'}\n\n    vi.mocked(buildHeaders).mockReturnValue(headers)\n    const spyFetch = vi.spyOn(http, 'fetch').mockResolvedValue({\n      json,\n      status,\n      headers: {raw: () => ({})},\n    } as any)\n\n    // When\n    await admin.restRequest('GET', '/themes', Session)\n\n    // Then\n    expect(spyFetch).toHaveBeenLastCalledWith('https://store/admin/api/unstable/themes.json', {\n      headers,\n      method: 'GET',\n    })\n  })\n\n  test('fetch is called with correct parameters when it is a theme access session', async () => {\n    // Given\n    const themeAccessSession = {\n      ...Session,\n      token: 'shptka_token',\n    }\n\n    const status = 200\n    const headers = {'X-Shopify-Access-Token': `Bearer ${token}`, 'Content-Type': 'application/json'}\n\n    vi.mocked(buildHeaders).mockReturnValue(headers)\n    const spyFetch = vi.spyOn(http, 'fetch').mockResolvedValue({\n      json: () => Promise.resolve({result: true}),\n      status,\n      headers: {raw: () => ({})},\n    } as any)\n\n    // When\n    await admin.restRequest('GET', '/themes', themeAccessSession)\n\n    // Then\n    expect(spyFetch).toHaveBeenLastCalledWith(\n      'https://theme-kit-access.shopifyapps.com/cli/admin/api/unstable/themes.json',\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'X-Shopify-Access-Token': 'shptka_token',\n          'X-Shopify-Shop': 'store',\n        },\n        method: 'GET',\n      },\n    )\n  })\n})\n"]}