{"version":3,"file":"local.test.js","sourceRoot":"","sources":["../../../../src/public/node/context/local.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ciPlatform,\n  hasGit,\n  isDevelopment,\n  isShopify,\n  isUnitTest,\n  analyticsDisabled,\n  useDeviceAuth,\n  cloudEnvironment,\n  macAddress,\n} from './local.js'\nimport {fileExists} from '../fs.js'\nimport {exec} from '../system.js'\nimport {expect, describe, vi, test} from 'vitest'\n\nvi.mock('../fs.js')\nvi.mock('../system.js')\n\ndescribe('isUnitTest', () => {\n  test('returns true when SHOPIFY_UNIT_TEST is truthy', () => {\n    // Given\n    const env = {SHOPIFY_UNIT_TEST: '1'}\n\n    // When\n    const got = isUnitTest(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n})\n\ndescribe('isDevelopment', () => {\n  test('returns true when SHOPIFY_CLI_ENV is debug', () => {\n    // Given\n    const env = {SHOPIFY_CLI_ENV: 'development'}\n\n    // When\n    const got = isDevelopment(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n})\n\ndescribe('isShopify', () => {\n  test('returns false when the SHOPIFY_RUN_AS_USER env. variable is truthy', async () => {\n    // Given\n    const env = {SHOPIFY_RUN_AS_USER: '1'}\n\n    // When\n    await expect(isShopify(env)).resolves.toEqual(false)\n  })\n\n  test('returns true when the SHOPIFY_RUN_AS_USER env. variable is falsy', async () => {\n    // Given\n    const env = {SHOPIFY_RUN_AS_USER: '0'}\n\n    // When\n    await expect(isShopify(env)).resolves.toEqual(true)\n  })\n\n  test('returns true when dev is installed', async () => {\n    // Given\n    vi.mocked(fileExists).mockResolvedValue(true)\n\n    // When\n    await expect(isShopify()).resolves.toBe(true)\n  })\n\n  test('returns true when it is a spin environment', async () => {\n    // Given\n    const env = {SPIN: '1'}\n\n    // When\n    await expect(isShopify(env)).resolves.toBe(true)\n  })\n})\n\ndescribe('hasGit', () => {\n  test('returns false if git --version errors', async () => {\n    // Given\n    vi.mocked(exec).mockRejectedValue(new Error('git not found'))\n\n    // When\n    const got = await hasGit()\n\n    // Then\n    expect(got).toBeFalsy()\n  })\n\n  test('returns true if git --version succeeds', async () => {\n    // Given\n    vi.mocked(exec).mockResolvedValue(undefined)\n\n    // When\n    const got = await hasGit()\n\n    // Then\n    expect(got).toBeTruthy()\n  })\n})\n\ndescribe('analitycsDisabled', () => {\n  test('returns true when SHOPIFY_CLI_NO_ANALYTICS is truthy', () => {\n    // Given\n    const env = {SHOPIFY_CLI_NO_ANALYTICS: '1'}\n\n    // When\n    const got = analyticsDisabled(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns true when in development', () => {\n    // Given\n    const env = {SHOPIFY_CLI_ENV: 'development'}\n\n    // When\n    const got = analyticsDisabled(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns false without env variables', () => {\n    // Given\n    const env = {}\n\n    // When\n    const got = analyticsDisabled(env)\n\n    // Then\n    expect(got).toBe(false)\n  })\n})\n\ndescribe('useDeviceAuth', () => {\n  test('returns true if SHOPIFY_CLI_DEVICE_AUTH is truthy', () => {\n    // Given\n    const env = {SHOPIFY_CLI_DEVICE_AUTH: '1'}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns true if SPIN is truthy', () => {\n    // Given\n    const env = {SPIN: '1'}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns true if CODESPACES is truthy', () => {\n    // Given\n    const env = {CODESPACES: '1'}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns true if GITPOD_WORKSPACE_URL is set', () => {\n    // Given\n    const env = {GITPOD_WORKSPACE_URL: 'http://custom.gitpod.io'}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns true if CLOUD_SHELL is truthy', () => {\n    // Given\n    const env = {CLOUD_SHELL: 'true'}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(true)\n  })\n\n  test('returns false when SHOPIFY_CLI_DEVICE_AUTH, SPIN, CODESPACES or GITPOD_WORKSPACE_URL are missing', () => {\n    // Given\n    const env = {}\n\n    // When\n    const got = useDeviceAuth(env)\n\n    // Then\n    expect(got).toBe(false)\n  })\n})\n\ndescribe('macAddress', () => {\n  test('returns any mac address value', async () => {\n    // When\n    const got = await macAddress()\n\n    // Then\n    expect(got).not.toBeUndefined()\n  })\n})\n\ndescribe('cloudEnvironment', () => {\n  test('when spin environmentreturns correct cloud platform', () => {\n    // Given\n    const env = {SPIN: '1'}\n\n    // When\n    const got = cloudEnvironment(env)\n\n    // Then\n    expect(got.platform).toBe('spin')\n  })\n\n  test('when codespace environmentreturns correct cloud platform', () => {\n    // Given\n    const env = {CODESPACES: '1'}\n\n    // When\n    const got = cloudEnvironment(env)\n\n    // Then\n    expect(got.platform).toBe('codespaces')\n  })\n\n  test('when gitpod environmentreturns correct cloud platform', () => {\n    // Given\n    const env = {GITPOD_WORKSPACE_URL: 'http://custom.gitpod.io'}\n\n    // When\n    const got = cloudEnvironment(env)\n\n    // Then\n    expect(got.platform).toBe('gitpod')\n  })\n\n  test('returns localhost when no cloud enviroment varible exist', () => {\n    // Given\n    const env = {}\n\n    // When\n    const got = cloudEnvironment(env)\n\n    // Then\n    expect(got.platform).toBe('localhost')\n  })\n})\n\ndescribe('ciPlatform', () => {\n  test('should return isCI false for non-CI environment', () => {\n    // Given\n    const nonCIResult = ciPlatform({})\n\n    // Then\n    expect(nonCIResult.isCI).toBe(false)\n  })\n\n  test('should return correct data for Bitbucket CI environment', () => {\n    // Given\n    const bitbucketEnv = {\n      CI: 'true',\n      BITBUCKET_BUILD_NUMBER: '123',\n      BITBUCKET_COMMIT_AUTHOR: 'author',\n      BITBUCKET_BRANCH: 'main',\n      BITBUCKET_COMMIT: 'abcdef',\n      BITBUCKET_BUILD_URL: 'https://example.com/bitbucket/build/123',\n    }\n\n    // When\n    const result = ciPlatform(bitbucketEnv)\n\n    // Then\n    expect(result).toEqual({\n      isCI: true,\n      name: 'bitbucket',\n      metadata: {\n        actor: 'author',\n        branch: 'main',\n        build: '123',\n        commitSha: 'abcdef',\n        run: '123',\n        url: 'https://example.com/bitbucket/build/123',\n      },\n    })\n  })\n\n  test('should return correct data for Github CI environment', () => {\n    // Given\n    const githubEnv = {\n      CI: 'true',\n      GITHUB_ACTION: '1',\n      GITHUB_ACTOR: 'github_actor',\n      GITHUB_REF_NAME: 'main',\n      GITHUB_RUN_ID: '456',\n      GITHUB_COMMIT_MESSAGE: 'Test commit message',\n      GITHUB_SHA: 'abcdef',\n      GITHUB_SERVER_URL: 'https://github.com',\n      GITHUB_REPOSITORY: '/user/repo',\n    }\n\n    // When\n    const result = ciPlatform(githubEnv)\n\n    // Then\n    expect(result).toEqual({\n      isCI: true,\n      name: 'github',\n      metadata: {\n        actor: 'github_actor',\n        branch: 'main',\n        build: '456',\n        commitMessage: 'Test commit message',\n        commitSha: 'abcdef',\n        run: '456',\n        url: 'https://github.com/user/repo/actions/runs/456',\n      },\n    })\n  })\n})\n"]}