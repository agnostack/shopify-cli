{"version":3,"file":"framework.test.js","sourceRoot":"","sources":["../../../src/public/node/framework.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {resolveFramework} from './framework.js'\nimport {inTemporaryDirectory, writeFile} from './fs.js'\nimport {joinPath} from './path.js'\nimport {describe, expect, test} from 'vitest'\n\ndescribe('frontFrameworkUsed', () => {\n  test('return rails when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const gemFilePath = joinPath(tmpDir, 'Gemfile')\n      const gemFile = 'gem \"rails\"'\n      await writeFile(gemFilePath, gemFile)\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('rails')\n    })\n  })\n  test('return next when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {react: '1.2.3', next: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('nextjs')\n    })\n  })\n  test('return remix when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {'@remix-run/node': '1.2.3', react: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('remix')\n    })\n  })\n  test('return flask when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const pipFilePath = joinPath(tmpDir, 'Pipfile')\n      const pipFile = 'flask'\n      await writeFile(pipFilePath, pipFile)\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('flask')\n    })\n  })\n  test('return laravel when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const composerFilePath = joinPath(tmpDir, 'composer.json')\n      const composerFile = {require: {'laravel/framework': '1.2.3'}}\n      await writeFile(composerFilePath, JSON.stringify(composerFile))\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('laravel')\n    })\n  })\n  test('return symfony when match every detectors', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const composerFilePath = joinPath(tmpDir, 'composer.json')\n      const composerFile = {require: {'symfony/requirement': '1.2.3'}}\n      await writeFile(composerFilePath, JSON.stringify(composerFile))\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('symfony')\n    })\n  })\n  test('return unkonw when no configuration file is present', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('unknown')\n    })\n  })\n  test('return unkonw when unsupported dependency', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {unsupported: '1.2.3'},\n      }\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('unknown')\n    })\n  })\n  test('return unkonw when not every detector is present', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {'@remix-run/node': '1.2.3', 'other-react': '1.2.3'},\n      }\n\n      // When\n      const got = await resolveFramework(tmpDir)\n\n      // Then\n      expect(got).toEqual('unknown')\n    })\n  })\n})\n"]}