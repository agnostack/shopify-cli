{"version":3,"file":"mimes.test.js","sourceRoot":"","sources":["../../../src/public/node/mimes.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,cAAc,EAAE,YAAY,EAAC,MAAM,YAAY,CAAA;AACvD,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAA;AAE7C,QAAQ,CAAC,OAAO,EAAE,GAAG,EAAE;IACrB,IAAI,CAAC,8CAA8C,EAAE,KAAK,IAAI,EAAE;QAC9D,MAAM,QAAQ,GAAG,CAAC,UAAU,EAAE,KAAK,EAAE,OAAO,EAAE,aAAa,EAAE,aAAa,CAAC,CAAA;QAC3E,MAAM,QAAQ,GAAG,CAAC,YAAY,EAAE,WAAW,EAAE,YAAY,EAAE,kBAAkB,EAAE,0BAA0B,CAAC,CAAA;QAC1G,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;IAChG,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,gCAAgC,EAAE,KAAK,IAAI,EAAE;QAChD,MAAM,eAAe,GAAG;YACtB,GAAG,EAAE,SAAS;YACd,GAAG,EAAE,SAAS;SACf,CAAA;QACD,YAAY,CAAC,eAAe,CAAC,CAAA;QAC7B,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAA;IACnH,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {lookupMimeType, setMimeTypes} from './mimes.js'\nimport {describe, expect, test} from 'vitest'\n\ndescribe('mimes', () => {\n  test('gets mime types for filenames and extensions', async () => {\n    const examples = ['file.txt', 'png', '.jpeg', 'file.tar.gz', 'noextension']\n    const expected = ['text/plain', 'image/png', 'image/jpeg', 'application/gzip', 'application/octet-stream']\n    examples.forEach((example, index) => expect(lookupMimeType(example)).toEqual(expected[index]))\n  })\n\n  test('sets mime types for extensions', async () => {\n    const newMimeExamples = {\n      bar: 'bar/foo',\n      foo: 'foo/bar',\n    }\n    setMimeTypes(newMimeExamples)\n    Object.entries(newMimeExamples).forEach(([extension, value]) => expect(lookupMimeType(extension)).toEqual(value))\n  })\n})\n"]}