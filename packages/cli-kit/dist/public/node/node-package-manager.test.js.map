{"version":3,"file":"node-package-manager.test.js","sourceRoot":"","sources":["../../../src/public/node/node-package-manager.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  packageManagerUsedForCreating,\n  addNPMDependenciesIfNeeded,\n  installNodeModules,\n  getDependencies,\n  getPackageName,\n  PackageJsonNotFoundError,\n  checkForNewVersion,\n  readAndParsePackageJson,\n  findUpAndReadPackageJson,\n  FindUpAndReadPackageJsonNotFoundError,\n  usesWorkspaces,\n  addResolutionOrOverride,\n  writePackageJSON,\n  getPackageManager,\n  installNPMDependenciesRecursively,\n  addNPMDependencies,\n  DependencyVersion,\n} from './node-package-manager.js'\nimport {exec} from './system.js'\nimport {inTemporaryDirectory, mkdir, touchFile, writeFile} from './fs.js'\nimport {normalizePath as pathNormalize, joinPath, dirname} from './path.js'\nimport latestVersion from 'latest-version'\nimport {vi, describe, test, expect} from 'vitest'\n\nvi.mock('../../version.js')\nvi.mock('./system.js')\nvi.mock('latest-version')\n\nconst mockedExec = vi.mocked(exec)\n\ndescribe('installNPMDependenciesRecursively', () => {\n  test('runs install in all the directories containing a package.json', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const rootPackage = joinPath(tmpDir, 'package.json')\n      const webPackage = joinPath(tmpDir, 'web/package.json')\n      const backendPackage = joinPath(tmpDir, 'web/backend/package.json')\n\n      await mkdir(dirname(webPackage))\n      await mkdir(dirname(backendPackage))\n\n      await writeFile(rootPackage, JSON.stringify({}))\n      await writeFile(webPackage, JSON.stringify({}))\n      await writeFile(backendPackage, JSON.stringify({}))\n\n      // When\n      await installNPMDependenciesRecursively({\n        directory: tmpDir,\n        packageManager: 'pnpm',\n      })\n\n      // Then\n      const calls = vi.mocked(exec).mock.calls as any\n      expect(exec).toHaveBeenCalledWith('pnpm', ['install'], expect.objectContaining({cwd: dirname(rootPackage)}))\n      expect(exec).toHaveBeenCalledWith('pnpm', ['install'], expect.objectContaining({cwd: dirname(webPackage)}))\n      expect(exec).toHaveBeenCalledWith('pnpm', ['install'], expect.objectContaining({cwd: dirname(backendPackage)}))\n    })\n  })\n})\n\ndescribe('packageManagerUsedForCreating', () => {\n  test('returns pnpm if the npm_config_user_agent variable contains yarn', () => {\n    // Given\n    const env = {npm_config_user_agent: 'yarn/1.22.17'}\n\n    // When\n    const got = packageManagerUsedForCreating(env)\n\n    // Then\n    expect(got).toBe('yarn')\n  })\n\n  test('returns pnpm if the npm_config_user_agent variable contains pnpm', () => {\n    // Given\n    const env = {npm_config_user_agent: 'pnpm'}\n\n    // When\n    const got = packageManagerUsedForCreating(env)\n\n    // Then\n    expect(got).toBe('pnpm')\n  })\n\n  test('returns npm if the npm_config_user_agent variable contains npm', () => {\n    // Given\n    const env = {npm_config_user_agent: 'npm'}\n\n    // When\n    const got = packageManagerUsedForCreating(env)\n\n    // Then\n    expect(got).toBe('npm')\n  })\n\n  test('returns unknown when the package manager cannot be detected', () => {\n    // When\n    const got = packageManagerUsedForCreating({})\n\n    // Then\n    expect(got).toBe('unknown')\n  })\n})\n\ndescribe('install', () => {\n  test('runs the install command', async () => {\n    // Given\n    const packageManager = 'npm'\n    const directory = '/path/to/project'\n\n    // When\n    await installNodeModules({\n      directory,\n      packageManager,\n      args: ['arg1'],\n    })\n\n    // Then\n    expect(mockedExec).toHaveBeenCalledWith(packageManager, ['install', 'arg1'], {\n      cwd: directory,\n    })\n  })\n})\n\ndescribe('getPackageName', () => {\n  test('returns package name', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        name: 'packageName',\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await getPackageName(packageJsonPath)\n\n      // Then\n      expect(got).toEqual('packageName')\n    })\n  })\n})\n\ndescribe('packageJSONContents', () => {\n  test('returns full package content', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        name: 'packageName',\n        version: '1.0.0',\n        dependencies: {prod: '1.2.3'},\n        devDependencies: {dev: '4.5.6'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await readAndParsePackageJson(packageJsonPath)\n\n      // Then\n      expect(got).toEqual(packageJson)\n    })\n  })\n})\n\ndescribe('usesWorkspaces', () => {\n  test('returns true when workspaces are used in the package.json', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        name: 'packageName',\n        version: '1.0.0',\n        workspaces: ['packages/*'],\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await usesWorkspaces(tmpDir)\n\n      // Then\n      expect(got).toEqual(true)\n    })\n  })\n\n  test('returns true when workspaces are used by pnpm', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        name: 'packageName',\n        version: '1.0.0',\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      const pnpmWorkspaceFilePath = joinPath(tmpDir, 'pnpm-workspace.yaml')\n      await writeFile(pnpmWorkspaceFilePath, '')\n\n      // When\n      const got = await usesWorkspaces(tmpDir)\n\n      // Then\n      expect(got).toEqual(true)\n    })\n  })\n\n  test('returns false when workspaces are not used', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        name: 'packageName',\n        version: '1.0.0',\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await usesWorkspaces(tmpDir)\n\n      // Then\n      expect(got).toEqual(false)\n    })\n  })\n})\n\ndescribe('getDependencies', () => {\n  test('returns dev and production dependencies', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {prod: '1.2.3'},\n        devDependencies: {dev: '4.5.6'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await getDependencies(packageJsonPath)\n\n      // Then\n      expect(got.prod).toEqual('1.2.3')\n      expect(got.dev).toEqual('4.5.6')\n    })\n  })\n\n  test('returns dev dependencies when production dependencies do not exist', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        devDependencies: {dev: '4.5.6'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await getDependencies(packageJsonPath)\n\n      // Then\n      expect(got.dev).toEqual('4.5.6')\n    })\n  })\n\n  test('returns production dependencies when dev dependencies do not exist', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {prod: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await getDependencies(packageJsonPath)\n\n      // Then\n      expect(got.prod).toEqual('1.2.3')\n    })\n  })\n\n  test('throws an error if the package.json file does not exist', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n\n      // When\n      await expect(getDependencies(packageJsonPath)).rejects.toEqual(PackageJsonNotFoundError(pathNormalize(tmpDir)))\n    })\n  })\n})\n\ndescribe('addNPMDependenciesIfNeeded', () => {\n  test('runs the right command when there is no version in dependency', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: undefined}], {\n        type: 'dev',\n        packageManager: 'npm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('npm', ['install', 'new', '--save-dev'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's npm and dev dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'dev',\n        packageManager: 'npm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('npm', ['install', 'new@version', '--save-dev'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's npm and production dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'prod',\n        packageManager: 'npm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('npm', ['install', 'new@version', '--save-prod'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's npm and peer dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'peer',\n        packageManager: 'npm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('npm', ['install', 'new@version', '--save-peer'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's yarn and dev dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'dev',\n        packageManager: 'yarn',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('yarn', ['add', 'new@version', '--dev'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's yarn and production dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'prod',\n        packageManager: 'yarn',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('yarn', ['add', 'new@version', '--prod'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's yarn and peer dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'peer',\n        packageManager: 'yarn',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('yarn', ['add', 'new@version', '--peer'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's pnpm and dev dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'dev',\n        packageManager: 'pnpm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('pnpm', ['add', 'new@version', '--save-dev'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's pnpm and production dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'prod',\n        packageManager: 'pnpm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('pnpm', ['add', 'new@version', '--save-prod'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test(\"runs the right command when it's pnpm and peer dependencies\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {\n        dependencies: {existing: '1.2.3'},\n      }\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      await addNPMDependenciesIfNeeded([{name: 'new', version: 'version'}], {\n        type: 'peer',\n        packageManager: 'pnpm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('pnpm', ['add', 'new@version', '--save-peer'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n})\n\ndescribe('checkForNewVersion', () => {\n  test('returns undefined when last version is lower or equals than current version', async () => {\n    // Given\n    const currentVersion = '2.2.2'\n    const newestVersion = '2.2.2'\n    const dependency = 'dependency'\n    vi.mocked(latestVersion).mockResolvedValue(newestVersion)\n\n    // When\n    const result = await checkForNewVersion(dependency, currentVersion)\n\n    // Then\n    expect(result).toBe(undefined)\n  })\n\n  test('returns undefined when last version greater than current version', async () => {\n    // Given\n    const currentVersion = '2.2.2'\n    const newestVersion = '2.2.3'\n    const dependency = 'dependency'\n    vi.mocked(latestVersion).mockResolvedValue(newestVersion)\n\n    // When\n    const result = await checkForNewVersion(dependency, currentVersion)\n\n    // Then\n    expect(result).toBe(newestVersion)\n  })\n\n  test('returns undefined when error is thrown retrieving newest version', async () => {\n    // Given\n    const currentVersion = '2.2.2'\n    const dependency = 'dependency'\n    vi.mocked(latestVersion).mockRejectedValue(undefined)\n\n    // When\n    const result = await checkForNewVersion(dependency, currentVersion)\n\n    // Then\n    expect(result).toBe(undefined)\n  })\n})\n\ndescribe('findUpAndReadPackageJson', () => {\n  test('returns the content of the package.json', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const subDirectory = joinPath(tmpDir, 'subdir')\n      const version = '1.2.3'\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      await mkdir(subDirectory)\n      const packageJson = {version}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n\n      // When\n      const got = await findUpAndReadPackageJson(subDirectory)\n\n      // Then\n      expect(got.path).toEqual(packageJsonPath)\n      expect(got.content as any).toEqual(packageJson)\n    })\n  })\n\n  test(\"throws a FindUpAndReadPackageJsonNotFoundError error if it can't find a package.json\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const subDirectory = joinPath(tmpDir, 'subdir')\n      await mkdir(subDirectory)\n\n      // When/Then\n      await expect(() => findUpAndReadPackageJson(subDirectory)).rejects.toThrowError(\n        FindUpAndReadPackageJsonNotFoundError(subDirectory),\n      )\n    })\n  })\n})\n\ndescribe('addResolutionOrOverride', () => {\n  test('when no package.json then an abort exception is thrown', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given/When\n      const result = () => addResolutionOrOverride(tmpDir, {'@types/react': '17.0.30'})\n\n      // Then\n      await expect(result).rejects.toThrow(FindUpAndReadPackageJsonNotFoundError(tmpDir))\n    })\n  })\n\n  test('when package.json without resolution and yarn manager then new resolution should be added', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const reactType = {'@types/react': '17.0.30'}\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      await touchFile(joinPath(tmpDir, 'yarn.lock'))\n\n      // When\n      await addResolutionOrOverride(tmpDir, reactType)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(packageJsonPath)\n      expect(packageJsonContent.resolutions).toBeDefined()\n      expect(packageJsonContent.resolutions).toEqual(reactType)\n      expect(packageJsonContent.overrides).toBeUndefined()\n    })\n  })\n\n  test('when package.json without resolution and npm manager then new overrides should be added', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const reactType = {'@types/react': '17.0.30'}\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      await touchFile(joinPath(tmpDir, 'pnpm-lock.yaml'))\n\n      // When\n      await addResolutionOrOverride(tmpDir, reactType)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(packageJsonPath)\n      expect(packageJsonContent.overrides).toBeDefined()\n      expect(packageJsonContent.overrides).toEqual(reactType)\n      expect(packageJsonContent.resolutions).toBeUndefined()\n    })\n  })\n\n  test('when package.json without resolution and pnpm manager then new overrides should be added', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const reactType = {'@types/react': '17.0.30'}\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      await touchFile(joinPath(tmpDir, 'pnpm-workspace.yaml'))\n\n      // When\n      await addResolutionOrOverride(tmpDir, reactType)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(packageJsonPath)\n      expect(packageJsonContent.overrides).toBeDefined()\n      expect(packageJsonContent.overrides).toEqual(reactType)\n      expect(packageJsonContent.resolutions).toBeUndefined()\n    })\n  })\n\n  test('when package.json with existing resolution type and yarn manager then dependency version is overwritten', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const reactType = {'@types/react': '17.0.30'}\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {resolutions: {'@types/react': '17.0.50'}}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      await touchFile(joinPath(tmpDir, 'yarn.lock'))\n\n      // When\n      await addResolutionOrOverride(tmpDir, reactType)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(packageJsonPath)\n      expect(packageJsonContent.resolutions).toBeDefined()\n      expect(packageJsonContent.resolutions).toEqual(reactType)\n      expect(packageJsonContent.overrides).toBeUndefined()\n    })\n  })\n\n  test('when package.json with different resolution types and yarn manager then dependency version is overwritten', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const reactType = {'@types/react': '17.0.30'}\n      const packageJsonPath = joinPath(tmpDir, 'package.json')\n      const packageJson = {resolutions: {'@types/node': '^17.0.38'}}\n      await writeFile(packageJsonPath, JSON.stringify(packageJson))\n      await touchFile(joinPath(tmpDir, 'yarn.lock'))\n\n      // When\n      await addResolutionOrOverride(tmpDir, reactType)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(packageJsonPath)\n      expect(packageJsonContent.resolutions).toBeDefined()\n      expect(packageJsonContent.resolutions).toEqual({'@types/node': '^17.0.38', '@types/react': '17.0.30'})\n      expect(packageJsonContent.overrides).toBeUndefined()\n    })\n  })\n})\n\ndescribe('writePackageJSON', () => {\n  test('writes the package.json and returns it parsed', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJSON = {name: 'mock name'}\n      const filePath = joinPath(tmpDir, 'package.json')\n\n      // When\n      await writePackageJSON(tmpDir, packageJSON)\n\n      // Then\n      const packageJsonContent = await readAndParsePackageJson(filePath)\n      expect(packageJsonContent).toEqual(packageJSON)\n    })\n  })\n})\n\ndescribe('getPackageManager', () => {\n  test('finds if npm is being used', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJSON = {name: 'mock name'}\n      const filePath = joinPath(tmpDir, 'package.json')\n\n      // When\n      await writePackageJSON(tmpDir, packageJSON)\n\n      // Then\n      const packageManager = await getPackageManager(tmpDir)\n      expect(packageManager).toEqual('npm')\n    })\n  })\n\n  test('finds if yarn is being used', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJSON = {name: 'mock name'}\n      const filePath = joinPath(tmpDir, 'package.json')\n      const yarnLock = joinPath(tmpDir, 'yarn.lock')\n\n      // When\n      await writePackageJSON(tmpDir, packageJSON)\n      await writeFile(yarnLock, '')\n\n      // Then\n      const packageManager = await getPackageManager(tmpDir)\n      expect(packageManager).toEqual('yarn')\n    })\n  })\n\n  test('finds if pnpm is being used', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const packageJSON = {name: 'mock name'}\n      const filePath = joinPath(tmpDir, 'package.json')\n      const pnpmLock = joinPath(tmpDir, 'pnpm-lock.yaml')\n\n      // When\n      await writePackageJSON(tmpDir, packageJSON)\n      await writeFile(pnpmLock, '')\n\n      // Then\n      const packageManager = await getPackageManager(tmpDir)\n      expect(packageManager).toEqual('pnpm')\n    })\n  })\n\n  test(\"throws a FindUpAndReadPackageJsonNotFoundError error if it can't find a package.json\", async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const subDirectory = joinPath(tmpDir, 'subdir')\n      await mkdir(subDirectory)\n\n      // When/Then\n      await expect(() => getPackageManager(subDirectory)).rejects.toThrowError(\n        FindUpAndReadPackageJsonNotFoundError(subDirectory),\n      )\n    })\n  })\n})\n\ndescribe('addNPMDependencies', () => {\n  test('when using npm with multiple dependencies they should be installed one by one, adding --save-exact if needed', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const dependencies: DependencyVersion[] = [\n        {name: 'first', version: '^0.0.1'},\n        {name: 'second', version: '0.0.2'},\n      ]\n\n      // When\n      await addNPMDependencies(dependencies, {\n        type: 'prod',\n        packageManager: 'npm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenNthCalledWith(1, 'npm', ['install', 'first@^0.0.1', '--save-prod'], {\n        cwd: tmpDir,\n      })\n      expect(mockedExec).toHaveBeenNthCalledWith(2, 'npm', ['install', 'second@0.0.2', '--save-prod', '--save-exact'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test('when using yarn with multiple dependencies they should be installed all at once', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const dependencies: DependencyVersion[] = [\n        {name: 'first', version: '0.0.1'},\n        {name: 'second', version: '0.0.2'},\n      ]\n\n      // When\n      await addNPMDependencies(dependencies, {\n        type: 'prod',\n        packageManager: 'yarn',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('yarn', ['add', 'first@0.0.1', 'second@0.0.2', '--prod'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n\n  test('when using pnpm with multiple dependencies they should be installed all at once', async () => {\n    await inTemporaryDirectory(async (tmpDir) => {\n      // Given\n      const dependencies: DependencyVersion[] = [\n        {name: 'first', version: '0.0.1'},\n        {name: 'second', version: '0.0.2'},\n      ]\n\n      // When\n      await addNPMDependencies(dependencies, {\n        type: 'prod',\n        packageManager: 'pnpm',\n        directory: tmpDir,\n      })\n\n      // Then\n      expect(mockedExec).toHaveBeenCalledWith('pnpm', ['add', 'first@0.0.1', 'second@0.0.2', '--save-prod'], {\n        cwd: tmpDir,\n      })\n    })\n  })\n})\n"]}