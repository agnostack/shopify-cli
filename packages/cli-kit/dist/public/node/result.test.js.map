{"version":3,"file":"result.test.js","sourceRoot":"","sources":["../../../src/public/node/result.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {err, ok} from './result.js'\nimport {mockAndCaptureOutput} from './testing/output.js'\nimport {outputSuccess} from '../../public/node/output.js'\nimport {describe, expect, test} from 'vitest'\n\ndescribe('ok', () => {\n  test('create ok with value', () => {\n    // When\n    const result = ok(123)\n\n    // Then\n    expect(!result.isErr() && result.value).toEqual(123)\n  })\n})\n\ndescribe('err', () => {\n  test('create err with en Error', () => {\n    // When\n    const result = err(new Error('Custom error object'))\n\n    // Then\n    expect(result.isErr() && result.error).toEqual(new Error('Custom error object'))\n  })\n})\n\ndescribe('valueOrBug', () => {\n  test('when ok result should return value', () => {\n    // When\n    const result = ok(123).valueOrBug()\n\n    // Then\n    expect(result).toEqual(123)\n  })\n\n  test('when err result should throw err result', () => {\n    // When\n    const result = err(new Error('custom error'))\n\n    // Then\n    expect(() => result.valueOrBug()).toThrow(new Error('custom error'))\n  })\n})\n\ndescribe('mapError', () => {\n  test('when ok result should not affect the result', () => {\n    // When\n    const result = ok('value').mapError(() => new Error('Mapped error'))\n\n    // Then\n    expect(!result.isErr() && result.value).toEqual('value')\n  })\n\n  test('when error result should return mapped error', () => {\n    // When\n    const result = err(new Error('Original error')).mapError(() => new Error('Mapped error'))\n\n    // Then\n    expect(() => result.valueOrBug()).toThrow('Mapped error')\n  })\n})\n\ndescribe('doOnOk', () => {\n  test('when ok result should execute the command and continue', () => {\n    // Given\n    const outpuMocker = mockAndCaptureOutput()\n\n    // When\n    const result = ok(123).doOnOk((value) => outputSuccess(`result ok ${value}`))\n\n    // Then\n    expect(!result.isErr() && result.value).toEqual(123)\n    expect(outpuMocker.success()).toMatchInlineSnapshot('\"result ok 123\"')\n  })\n})\n\ndescribe('map', () => {\n  test('when ok result should return mapped value', () => {\n    // When\n    const result = ok('value').map(() => 'mapped value')\n\n    // Then\n    expect(!result.isErr() && result.value).toEqual('mapped value')\n  })\n\n  test('when error result should not affect the result', () => {\n    // When\n    const result = err(new Error('Original error')).map(() => 'mapped value')\n\n    // Then\n    expect(() => result.valueOrBug()).toThrow('Original error')\n  })\n})\n"]}