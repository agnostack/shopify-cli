{"version":3,"file":"ruby.test.js","sourceRoot":"","sources":["../../../src/public/node/ruby.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {execCLI2, MinWdmWindowsVersion, RubyCLIVersion, bundleUserHome} from './ruby.js'\nimport {captureOutput} from './system.js'\nimport * as system from './system.js'\nimport {platformAndArch} from './os.js'\nimport {joinPath} from './path.js'\nimport {inTemporaryDirectory, mkdir, findPathUp, touchFile, appendFile, fileExists, readFile} from './fs.js'\nimport {getEnvironmentVariables} from './environment.js'\nimport {isSpinEnvironment, spinFqdn} from './context/spin.js'\nimport {pathConstants} from '../../private/node/constants.js'\nimport {beforeEach, describe, expect, test, SpyInstance, vi} from 'vitest'\n\nvi.mock('./system')\nvi.mock('./environment')\nvi.mock('./fs')\nvi.mock('./os')\nvi.mock('../../private/node/constants.js')\nvi.mock('./context/spin.js')\n\nbeforeEach(() => {\n  vi.mocked(getEnvironmentVariables).mockReturnValue({})\n  mockPlatformAndArch({windows: false})\n})\n\ndescribe('execCLI', () => {\n  test('throws an exception when Ruby is not installed', async () => {\n    vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n    vi.mocked(captureOutput).mockRejectedValue({})\n\n    await expect(() => execCLI2(['args'])).rejects.toThrowError('Ruby environment not found')\n  })\n\n  test('throws an exception when Ruby version requirement is not met', async () => {\n    const rubyVersion = '2.2.0'\n    vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n    vi.mocked(captureOutput).mockResolvedValueOnce(rubyVersion)\n\n    await expect(() => execCLI2(['args'])).rejects.toThrowError(\n      `Ruby version \\u001b[33m${rubyVersion}\\u001b[39m is not supported`,\n    )\n  })\n\n  test('throws an exception when Bundler is not installed', async () => {\n    const rubyVersion = '2.7.5'\n    vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n    vi.mocked(captureOutput).mockResolvedValueOnce(rubyVersion)\n    vi.mocked(captureOutput).mockRejectedValue({})\n\n    await expect(() => execCLI2(['args'])).rejects.toThrowError(`Bundler not found`)\n  })\n\n  test('throws an exception when Bundler version requirement is not met', async () => {\n    const rubyVersion = '2.7.5'\n    const bundlerVersion = '2.2.0'\n    vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n    vi.mocked(captureOutput).mockResolvedValueOnce(rubyVersion)\n    vi.mocked(captureOutput).mockResolvedValueOnce(bundlerVersion)\n\n    await expect(() => execCLI2(['args'])).rejects.toThrowError(\n      `Bundler version \\u001b[33m${bundlerVersion}\\u001b[39m is not supported`,\n    )\n  })\n\n  test('throws an exception when creating CLI working directory', async () => {\n    // Given\n    const rubyVersion = '2.7.5'\n    const bundlerVersion = '2.4.0'\n    vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n    vi.mocked(captureOutput).mockResolvedValueOnce(rubyVersion)\n    vi.mocked(captureOutput).mockResolvedValueOnce(bundlerVersion)\n    vi.mocked(mkdir).mockRejectedValue({message: 'Error'})\n\n    // When/Then\n    await expect(() => execCLI2(['args'])).rejects.toThrowError('Error')\n  })\n\n  test('when run bundled CLI2 in non windows then gemfile content is correct and bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const execSpy = mockBundledCLI2(cli2Directory, {windows: false})\n      const gemfilePath = joinPath(cli2Directory, 'ruby-cli', RubyCLIVersion, 'Gemfile')\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath)\n      await validateGemFileContent(gemfilePath, {bundled: true, windows: false})\n    })\n  })\n\n  test('when run bundled CLI2 in windows then gemfile content should be correct and bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const execSpy = mockBundledCLI2(cli2Directory, {windows: true})\n      const gemfilePath = joinPath(cli2Directory, 'ruby-cli', RubyCLIVersion, 'Gemfile')\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath)\n      await validateGemFileContent(gemfilePath, {bundled: true, windows: true})\n    })\n  })\n\n  test('when run embedded CLI2 in non windows then gemfile content should be correct and bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const execSpy = await mockEmbeddedCLI2(cli2Directory, {windows: false, existingWindowsDependency: false})\n      const gemfilePath = joinPath(cli2Directory, 'Gemfile')\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath, joinPath(cli2Directory, 'bin', 'shopify'))\n      await validateGemFileContent(gemfilePath, {bundled: false, windows: false})\n    })\n  })\n\n  test('when run embedded CLI2 in windows without dependency then gemfile content should be correct and bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const execSpy = await mockEmbeddedCLI2(cli2Directory, {windows: true, existingWindowsDependency: false})\n      const gemfilePath = joinPath(cli2Directory, 'Gemfile')\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath, joinPath(cli2Directory, 'bin', 'shopify'))\n      await validateGemFileContent(gemfilePath, {bundled: false, windows: true})\n    })\n  })\n\n  test('when run embedded CLI2 in windows with existing dependency then gemfile content should be correct and bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const execSpy = await mockEmbeddedCLI2(cli2Directory, {windows: true, existingWindowsDependency: true})\n      const gemfilePath = joinPath(cli2Directory, 'Gemfile')\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath, joinPath(cli2Directory, 'bin', 'shopify'))\n      await validateGemFileContent(gemfilePath, {bundled: false, windows: true})\n    })\n  })\n\n  test('when run CLI2 in spin then bundle runs with correct params', async () => {\n    await inTemporaryDirectory(async (cli2Directory) => {\n      // Given\n      const fqdn = 'workspace.namespace.eu.spin.dev'\n      const execSpy = await mockEmbeddedCLI2(cli2Directory, {windows: true, existingWindowsDependency: true})\n      const gemfilePath = joinPath(cli2Directory, 'Gemfile')\n      vi.mocked(isSpinEnvironment).mockReturnValue(true)\n      vi.mocked(spinFqdn).mockResolvedValue(fqdn)\n\n      // When\n      await execCLI2(['args'], {\n        token: 'token_0000_1111_2222_3333',\n        directory: './directory',\n      })\n\n      // Then\n      validateBundleExec(execSpy, gemfilePath, joinPath(cli2Directory, 'bin', 'shopify'), fqdn)\n      await validateGemFileContent(gemfilePath, {bundled: false, windows: true})\n    })\n  })\n\n  test('when we run bundler on Windows and there is a PUBLIC env var, we set BUNDLE_USER_HOME', async () => {\n    // Given\n    mockPlatformAndArch({windows: true})\n    vi.stubEnv('PUBLIC', 'root')\n\n    // When\n    expect(bundleUserHome()).toEqual(joinPath('root', 'AppData', 'Local', 'shopify-bundler-nodejs', 'Cache'))\n    vi.unstubAllEnvs()\n  })\n\n  test('when we run bundler on Windows and there is no PUBLIC env var, we dont set BUNDLE_USER_HOME', async () => {\n    // Given\n    mockPlatformAndArch({windows: true})\n    vi.stubEnv('PUBLIC', '')\n\n    // When\n    expect(bundleUserHome()).toBeUndefined()\n    vi.unstubAllEnvs()\n  })\n\n  test('when we run bundler on other OSes, we dont set BUNDLE_USER_HOME', async () => {\n    // Given\n    mockPlatformAndArch({windows: false})\n\n    // When\n    expect(bundleUserHome()).toBeUndefined()\n  })\n})\n\nfunction mockBundledCLI2(cli2Directory: string, {windows}: {windows: boolean}) {\n  vi.mocked(getEnvironmentVariables).mockReturnValue({SHOPIFY_CLI_BUNDLED_THEME_CLI: '1'})\n  vi.mocked(pathConstants.directories.cache.vendor.path).mockReturnValue(cli2Directory)\n  mockRubyEnvironment()\n  mockPlatformAndArch({windows})\n  return vi.spyOn(system, 'exec')\n}\n\nasync function mockEmbeddedCLI2(\n  cli2Directory: string,\n  {windows, existingWindowsDependency}: {windows: boolean; existingWindowsDependency: boolean},\n) {\n  vi.mocked(findPathUp).mockResolvedValue(cli2Directory)\n  mockRubyEnvironment()\n  mockPlatformAndArch({windows})\n  await createGemFile(cli2Directory, existingWindowsDependency)\n  return vi.spyOn(system, 'exec')\n}\n\nfunction mockRubyEnvironment() {\n  vi.mocked(captureOutput).mockResolvedValueOnce('2.7.5')\n  vi.mocked(captureOutput).mockResolvedValueOnce('2.4.0')\n}\n\nfunction mockPlatformAndArch({windows}: {windows: boolean}) {\n  if (windows) {\n    vi.mocked(platformAndArch).mockReturnValue({platform: 'windows', arch: 'x64'})\n  } else {\n    vi.mocked(platformAndArch).mockReturnValue({platform: 'darwin', arch: 'x64'})\n  }\n}\n\nasync function createGemFile(cli2Directory: string, existingWindowsDependency: boolean) {\n  const gemfilePath = joinPath(cli2Directory, 'Gemfile')\n  let content = \"source 'https://rubygems.org'\\n\"\n  if (existingWindowsDependency) content = content.concat(`gem 'wdm', '>= ${MinWdmWindowsVersion}'`)\n  await touchFile(gemfilePath)\n  await appendFile(gemfilePath, content.concat('\\n'))\n}\n\nfunction validateBundleExec(execSpy: SpyInstance, gemFilePath: string, execPath = 'shopify', spinFqdn?: string) {\n  expect(execSpy).toHaveBeenLastCalledWith('bundle', ['exec', execPath, 'args'], {\n    stdio: 'inherit',\n    cwd: './directory',\n    env: {\n      ...process.env,\n      SHOPIFY_CLI_STOREFRONT_RENDERER_AUTH_TOKEN: undefined,\n      SHOPIFY_CLI_ADMIN_AUTH_TOKEN: undefined,\n      SHOPIFY_CLI_STORE: undefined,\n      SHOPIFY_CLI_AUTH_TOKEN: 'token_0000_1111_2222_3333',\n      SHOPIFY_CLI_RUN_AS_SUBPROCESS: 'true',\n      SHOPIFY_CLI_RUBY_BIN: 'ruby',\n      BUNDLE_GEMFILE: gemFilePath,\n      ...(spinFqdn && {SPIN_FQDN: spinFqdn, SPIN: 1}),\n    },\n  })\n}\n\nasync function validateGemFileContent(gemfilePath: string, {bundled, windows}: {bundled: boolean; windows: boolean}) {\n  expect(fileExists(gemfilePath)).toBeTruthy()\n  const gemContent = await readFile(gemfilePath, {encoding: 'utf8'})\n  expect(gemContent).toContain(\"source 'https://rubygems.org'\")\n  if (bundled) expect(gemContent).toContain(`gem 'shopify-cli', '${RubyCLIVersion}'`)\n  const windowsDepency = `gem 'wdm', '>= ${MinWdmWindowsVersion}'`\n  if (windows) {\n    expect(gemContent).toContain(windowsDepency)\n    const notDuplicated = gemContent.indexOf(windowsDepency) === gemContent.lastIndexOf(windowsDepency)\n    expect(notDuplicated).toBeTruthy()\n  } else {\n    expect(gemContent).not.toContain(windowsDepency)\n  }\n}\n"]}