{"version":3,"file":"session.test.js","sourceRoot":"","sources":["../../../src/public/node/session.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  ensureAuthenticatedAdmin,\n  ensureAuthenticatedPartners,\n  ensureAuthenticatedStorefront,\n  ensureAuthenticatedThemes,\n} from './session.js'\n\nimport {getPartnersToken} from './environment.js'\nimport {ApplicationToken} from '../../private/node/session/schema.js'\nimport {ensureAuthenticated} from '../../private/node/session.js'\nimport {exchangeCustomPartnerToken} from '../../private/node/session/exchange.js'\nimport {vi, describe, expect, test} from 'vitest'\n\nconst futureDate = new Date(2022, 1, 1, 11)\n\nconst partnersToken: ApplicationToken = {\n  accessToken: 'custom_partners_token',\n  expiresAt: futureDate,\n  scopes: ['scope2'],\n}\n\nvi.mock('../../private/node/session.js')\nvi.mock('../../private/node/session/exchange.js')\nvi.mock('../../private/node/session/store.js')\nvi.mock('./environment.js')\n\ndescribe('ensureAuthenticatedStorefront', () => {\n  test('returns only storefront token if success', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({storefront: 'storefront_token'})\n\n    // When\n    const got = await ensureAuthenticatedStorefront()\n\n    // Then\n    expect(got).toEqual('storefront_token')\n  })\n\n  test('returns the password if provided', async () => {\n    // Given/When\n    const got = await ensureAuthenticatedStorefront([], 'theme_access_password')\n\n    // Then\n    expect(got).toEqual('theme_access_password')\n  })\n\n  test('throws error if there is no storefront token', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({partners: 'partners_token'})\n\n    // When\n    const got = ensureAuthenticatedStorefront()\n\n    // Then\n    await expect(got).rejects.toThrow(`No storefront token`)\n  })\n})\n\ndescribe('ensureAuthenticatedAdmin', () => {\n  test('returns only admin token if success', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({\n      admin: {token: 'admin_token', storeFqdn: 'mystore.myshopify.com'},\n    })\n\n    // When\n    const got = await ensureAuthenticatedAdmin('mystore')\n\n    // Then\n    expect(got).toEqual({token: 'admin_token', storeFqdn: 'mystore.myshopify.com'})\n  })\n\n  test('throws error if there is no token', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({partners: 'partners_token'})\n\n    // When\n    const got = ensureAuthenticatedAdmin('mystore')\n\n    // Then\n    await expect(got).rejects.toThrow(`No admin token`)\n  })\n})\n\ndescribe('ensureAuthenticatedPartners', () => {\n  test('returns only partners token if success', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({partners: 'partners_token'})\n\n    // When\n    const got = await ensureAuthenticatedPartners()\n\n    // Then\n    expect(got).toEqual('partners_token')\n  })\n\n  test('throws error if there is no partners token', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({})\n\n    // When\n    const got = ensureAuthenticatedPartners()\n\n    // Then\n    await expect(got).rejects.toThrow(`No partners token`)\n  })\n\n  test('returns custom partners token if envvar is defined', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({partners: 'partners_token'})\n    vi.mocked(exchangeCustomPartnerToken).mockResolvedValueOnce(partnersToken)\n    vi.mocked(getPartnersToken).mockReturnValue('custom_cli_token')\n\n    // When\n    const got = await ensureAuthenticatedPartners([])\n\n    // Then\n    expect(got).toEqual('custom_partners_token')\n  })\n})\n\ndescribe('ensureAuthenticatedTheme', () => {\n  test('returns admin token when no password is provided', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({\n      admin: {token: 'admin_token', storeFqdn: 'mystore.myshopify.com'},\n    })\n\n    // When\n    const got = await ensureAuthenticatedThemes('mystore', undefined)\n\n    // Then\n    expect(got).toEqual({token: 'admin_token', storeFqdn: 'mystore.myshopify.com'})\n  })\n\n  test('throws error if there is no token when no password is provided', async () => {\n    // Given\n    vi.mocked(ensureAuthenticated).mockResolvedValueOnce({})\n\n    // When\n    const got = ensureAuthenticatedThemes('mystore', undefined)\n\n    // Then\n    await expect(got).rejects.toThrow(`No admin token`)\n  })\n\n  test('returns the password when is provided', async () => {\n    // When\n    const got = await ensureAuthenticatedThemes('mystore', 'password')\n\n    // Then\n    expect(got).toEqual({token: 'password', storeFqdn: 'mystore.myshopify.com'})\n  })\n})\n"]}