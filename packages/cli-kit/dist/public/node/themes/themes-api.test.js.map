{"version":3,"file":"themes-api.test.js","sourceRoot":"","sources":["../../../../src/public/node/themes/themes-api.test.ts"],"names":[],"mappings":"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","sourcesContent":["import {createTheme, deleteTheme, fetchThemes, ThemeParams, updateTheme, publishTheme} from './themes-api.js'\nimport {test, vi, expect, describe} from 'vitest'\nimport {restRequest} from '@shopify/cli-kit/node/api/admin'\nimport {AbortError} from '@shopify/cli-kit/node/error'\n\nvi.mock('@shopify/cli-kit/node/api/admin')\n\nconst session = {token: 'token', storeFqdn: 'my-shop.myshopify.com'}\n\ndescribe('fetchThemes', () => {\n  test('returns store themes', async () => {\n    // Given\n    vi.mocked(restRequest).mockResolvedValue({\n      json: {\n        themes: [\n          {id: 123, name: 'store theme 1'},\n          {id: 456, name: 'store theme 2'},\n        ],\n      },\n      status: 200,\n      headers: {},\n    })\n\n    // When\n    const themes = await fetchThemes(session)\n\n    // Then\n    expect(restRequest).toHaveBeenCalledWith('GET', '/themes', session, undefined, {fields: 'id,name,role'})\n    expect(themes).toHaveLength(2)\n\n    expect(themes[0]!.id).toEqual(123)\n    expect(themes[1]!.id).toEqual(456)\n\n    expect(themes[0]!.name).toEqual('store theme 1')\n    expect(themes[1]!.name).toEqual('store theme 2')\n  })\n})\n\ndescribe('createTheme', () => {\n  test('creates a theme', async () => {\n    // Given\n    const id = 123\n    const name = 'new theme'\n    const role = 'unpublished'\n    const params: ThemeParams = {name, role}\n\n    vi.mocked(restRequest).mockResolvedValue({\n      json: {theme: {id, name, role}},\n      status: 200,\n      headers: {},\n    })\n\n    // When\n    const theme = await createTheme(params, session)\n\n    // Then\n    expect(restRequest).toHaveBeenCalledWith('POST', '/themes', session, {theme: params}, {})\n    expect(theme).not.toBeNull()\n    expect(theme!.id).toEqual(id)\n    expect(theme!.name).toEqual(name)\n    expect(theme!.role).toEqual(role)\n  })\n})\n\ndescribe('updateTheme', () => {\n  test('updates a theme', async () => {\n    // Given\n    const id = 123\n    const name = 'updated theme'\n    const role = 'unpublished'\n    const params: ThemeParams = {name, role}\n\n    vi.mocked(restRequest).mockResolvedValue({\n      json: {theme: {id, name, role}},\n      status: 200,\n      headers: {},\n    })\n\n    // When\n    const theme = await updateTheme(id, params, session)\n\n    // Then\n    expect(restRequest).toHaveBeenCalledWith('PUT', `/themes/${id}`, session, {theme: {id, ...params}}, {})\n    expect(theme).not.toBeNull()\n    expect(theme!.id).toEqual(id)\n    expect(theme!.name).toEqual(name)\n    expect(theme!.role).toEqual(role)\n  })\n})\n\ndescribe('publishTheme', () => {\n  test('publish a theme', async () => {\n    // Given\n    const id = 123\n    const name = 'updated theme'\n    const role = 'live'\n\n    vi.mocked(restRequest).mockResolvedValue({\n      json: {theme: {id, name, role}},\n      status: 200,\n      headers: {},\n    })\n\n    // When\n    const theme = await publishTheme(id, session)\n\n    // Then\n    expect(restRequest).toHaveBeenCalledWith('PUT', `/themes/${id}`, session, {theme: {id, role: 'main'}}, {})\n    expect(theme).not.toBeNull()\n    expect(theme!.id).toEqual(id)\n    expect(theme!.name).toEqual(name)\n    expect(theme!.role).toEqual(role)\n  })\n})\n\ndescribe('deleteTheme', () => {\n  test('deletes a theme', async () => {\n    // Given\n    const id = 123\n    const name = 'store theme'\n\n    vi.mocked(restRequest).mockResolvedValue({\n      json: {theme: {id, name}},\n      status: 200,\n      headers: {},\n    })\n\n    // When\n    const theme = await deleteTheme(id, session)\n\n    // Then\n    expect(restRequest).toHaveBeenCalledWith('DELETE', `/themes/${id}`, session, undefined, {})\n    expect(theme).not.toBeNull()\n    expect(theme!.id).toEqual(id)\n    expect(theme!.name).toEqual('store theme')\n  })\n})\n\ndescribe('request errors', () => {\n  const httpErrors = [401, 403, 500, 999]\n\n  httpErrors.forEach((httpError) => {\n    test(`${httpError} errors`, async () => {\n      // Given\n      vi.mocked(restRequest).mockResolvedValue({\n        json: {},\n        status: httpError,\n        headers: {},\n      })\n\n      await expect(async () => {\n        // When\n        return deleteTheme(1, session)\n\n        // Then\n      }).rejects.toThrowError(AbortError)\n    })\n  })\n})\n"]}