{"version":3,"file":"conf.test.js","sourceRoot":"","sources":["../../src/services/conf.test.ts"],"names":[],"mappings":"AAAA,OAAO,EAAe,oBAAoB,EAAE,cAAc,EAAC,MAAM,WAAW,CAAA;AAC5E,OAAO,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAC,MAAM,QAAQ,CAAA;AAC7C,OAAO,EAAC,oBAAoB,EAAC,MAAM,0BAA0B,CAAA;AAC7D,OAAO,EAAC,YAAY,EAAC,MAAM,qCAAqC,CAAA;AAEhE,QAAQ,CAAC,qBAAqB,EAAE,KAAK,IAAI,EAAE;IACzC,IAAI,CAAC,2DAA2D,EAAE,KAAK,IAAI,EAAE;QAC3E,MAAM,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACvC,QAAQ;YACR,MAAM,IAAI,GAAG,IAAI,YAAY,CAAe,EAAC,GAAG,EAAC,CAAC,CAAA;YAClD,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAA;YAEpC,OAAO;YACP,MAAM,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAA;YAEtC,OAAO;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAA;QAC1B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,6DAA6D,EAAE,KAAK,IAAI,EAAE;QAC7E,MAAM,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACvC,QAAQ;YACR,MAAM,IAAI,GAAG,IAAI,YAAY,CAAe,EAAC,GAAG,EAAC,CAAC,CAAA;YAClD,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAA;YAErC,OAAO;YACP,MAAM,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAA;YAEtC,OAAO;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAA;QACzB,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,sCAAsC,EAAE,KAAK,IAAI,EAAE;QACtD,MAAM,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACvC,QAAQ;YACR,MAAM,IAAI,GAAG,IAAI,YAAY,CAAe,EAAC,GAAG,EAAC,CAAC,CAAA;YAClD,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAA;YAErC,OAAO;YACP,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;YAC1B,MAAM,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAA;YAEtC,OAAO;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAA;QAC1B,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,IAAI,CAAC,uCAAuC,EAAE,KAAK,IAAI,EAAE;QACvD,MAAM,oBAAoB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;YACvC,QAAQ;YACR,MAAM,IAAI,GAAG,IAAI,YAAY,CAAe,EAAC,GAAG,EAAC,CAAC,CAAA;YAClD,IAAI,CAAC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAA;YAEpC,OAAO;YACP,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA;YAC3B,MAAM,GAAG,GAAG,oBAAoB,CAAC,IAAI,CAAC,CAAA;YAEtC,OAAO;YACP,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAA;QACzB,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA","sourcesContent":["import {ConfigSchema, isAutocorrectEnabled, setAutocorrect} from './conf.js'\nimport {describe, expect, test} from 'vitest'\nimport {inTemporaryDirectory} from '@shopify/cli-kit/node/fs'\nimport {LocalStorage} from '@shopify/cli-kit/node/local-storage'\n\ndescribe('did-you-mean config', async () => {\n  test('isAutocorrectEnabled returns true if cached value is true', async () => {\n    await inTemporaryDirectory(async (cwd) => {\n      // Given\n      const conf = new LocalStorage<ConfigSchema>({cwd})\n      conf.set('autocorrectEnabled', true)\n\n      // When\n      const got = isAutocorrectEnabled(conf)\n\n      // Then\n      expect(got).toBeTruthy()\n    })\n  })\n\n  test('isAutocorrectEnabled returns false if cached value is false', async () => {\n    await inTemporaryDirectory(async (cwd) => {\n      // Given\n      const conf = new LocalStorage<ConfigSchema>({cwd})\n      conf.set('autocorrectEnabled', false)\n\n      // When\n      const got = isAutocorrectEnabled(conf)\n\n      // Then\n      expect(got).toBeFalsy()\n    })\n  })\n\n  test('setAutocorrect caches value for true', async () => {\n    await inTemporaryDirectory(async (cwd) => {\n      // Given\n      const conf = new LocalStorage<ConfigSchema>({cwd})\n      conf.set('autocorrectEnabled', false)\n\n      // When\n      setAutocorrect(true, conf)\n      const got = isAutocorrectEnabled(conf)\n\n      // Then\n      expect(got).toBeTruthy()\n    })\n  })\n\n  test('setAutocorrect caches value for false', async () => {\n    await inTemporaryDirectory(async (cwd) => {\n      // Given\n      const conf = new LocalStorage<ConfigSchema>({cwd})\n      conf.set('autocorrectEnabled', true)\n\n      // When\n      setAutocorrect(false, conf)\n      const got = isAutocorrectEnabled(conf)\n\n      // Then\n      expect(got).toBeFalsy()\n    })\n  })\n})\n"]}