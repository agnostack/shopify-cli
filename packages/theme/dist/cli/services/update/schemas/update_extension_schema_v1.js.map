{"version":3,"file":"update_extension_schema_v1.js","sourceRoot":"","sources":["../../../../../src/cli/services/update/schemas/update_extension_schema_v1.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * IMPORTANT: Do not modify this file.\n *\n * This file is generated by the `pnpm run schema:generate` command and should\n * not be modified.\n *\n * Any changes to the schemas for `update_extension` files require the creation\n * of a new schema file at `https://github.com/Shopify/theme-liquid-docs`.\n *\n * This is necessary because Shopify must support legacy `update_extension.json`\n * scripts. Once a new schema is published, it must be supported forever without\n * breaking backward compatibility.\n */\nimport {zod as z} from '@shopify/cli-kit/node/schema'\n\nexport const schemaUrlV1 =\n  'https://raw.githubusercontent.com/Shopify/theme-liquid-docs/main/schemas/update/update_extension_schema_v1.json'\n\nexport const schemaV1 = z\n  .object({\n    $schema: z.string(),\n    theme_name: z.string(),\n    theme_version: z.string(),\n    operations: z\n      .array(\n        z.record(\n          z\n            .array(\n              z.union([\n                z\n                  .object({\n                    action: z.literal('move'),\n                    file: z.any().superRefine((x, ctx) => {\n                      const schemas = [z.string(), z.object({source: z.string(), target: z.string()})]\n                      const errors = schemas.reduce(\n                        (errors: z.ZodError[], schema) =>\n                          ((result) => ('error' in result ? [...errors, result.error] : errors))(schema.safeParse(x)),\n                        [],\n                      )\n                      if (schemas.length - errors.length !== 1) {\n                        ctx.addIssue({\n                          path: ctx.path,\n                          code: 'invalid_union',\n                          unionErrors: errors,\n                          message: 'Invalid input: Should pass single schema',\n                        })\n                      }\n                    }),\n                    from_key: z.string(),\n                    to_key: z.string(),\n                  })\n                  .strict(),\n                z\n                  .object({\n                    action: z.literal('copy'),\n                    file: z.any().superRefine((x, ctx) => {\n                      const schemas = [z.string(), z.object({source: z.string(), target: z.string()})]\n                      const errors = schemas.reduce(\n                        (errors: z.ZodError[], schema) =>\n                          ((result) => ('error' in result ? [...errors, result.error] : errors))(schema.safeParse(x)),\n                        [],\n                      )\n                      if (schemas.length - errors.length !== 1) {\n                        ctx.addIssue({\n                          path: ctx.path,\n                          code: 'invalid_union',\n                          unionErrors: errors,\n                          message: 'Invalid input: Should pass single schema',\n                        })\n                      }\n                    }),\n                    from_key: z.string(),\n                    to_key: z.string(),\n                  })\n                  .strict(),\n                z\n                  .object({\n                    action: z.literal('add'),\n                    file: z.string(),\n                    key: z.string(),\n                    value: z.any().superRefine((x, ctx) => {\n                      const schemas = [z.record(z.any()), z.array(z.any())]\n                      const errors = schemas.reduce(\n                        (errors: z.ZodError[], schema) =>\n                          ((result) => ('error' in result ? [...errors, result.error] : errors))(schema.safeParse(x)),\n                        [],\n                      )\n                      if (schemas.length - errors.length !== 1) {\n                        ctx.addIssue({\n                          path: ctx.path,\n                          code: 'invalid_union',\n                          unionErrors: errors,\n                          message: 'Invalid input: Should pass single schema',\n                        })\n                      }\n                    }),\n                  })\n                  .strict(),\n                z\n                  .object({\n                    action: z.literal('update'),\n                    file: z.string(),\n                    key: z.string(),\n                    old_value: z.string().optional(),\n                    new_value: z.string(),\n                  })\n                  .strict(),\n                z\n                  .object({\n                    action: z.literal('delete'),\n                    file: z.string(),\n                    key: z.string(),\n                    value: z.string().optional(),\n                  })\n                  .strict(),\n              ]),\n            )\n            .min(1),\n        ),\n      )\n      .min(1),\n  })\n  .strict()\n"]}